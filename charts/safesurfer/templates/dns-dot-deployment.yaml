{{- if .Values.dns.enabled }}
{{- if .Values.dns.dot.enabled }}
{{- if .Values.dns.dot.deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" (dict "Release" .Release "name" "dot" "nameOverride" .Values.dns.dot.nameOverride) }}
  namespace: {{ include "ns" (dict "Values" .Values "Release" .Release "IndividualNamespace" .Values.dns.namespace) }}
  labels:
    {{- include "safesurfer-dns.labels" . | nindent 4 }}
{{- if .Values.dns.labels }}
{{- with .Values.dns.labels }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
spec:
  replicas: {{ .Values.dns.dot.replicas }}
{{- if .Values.dns.dot.deploymentStrategy }}
  strategy:
{{- with .Values.dns.dot.deploymentStrategy }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
  selector:
    matchLabels:
      app: {{ include "dotContainerAndAppName" . }}
      {{- include "safesurfer-dns.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "dotContainerAndAppName" . }}
        {{- include "safesurfer-dns.selectorLabels" . | nindent 8 }}
    {{- if .Values.dns.labels }}
    {{- with .Values.dns.labels }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- end }}
      annotations:
        domain: {{ .Values.dns.dot.host }}
        prometheus.io/path: /metrics
        prometheus.io/port: "2112"
        prometheus.io/scrape: "true"
        {{- if and .Values.dns.dot.cert .Values.dns.dot.key }}
        checksum/dot-certs: {{ include (print $.Template.BasePath "/dns-dot-certificate.yaml") . | sha256sum }}
        {{- end }}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - name: {{ include "name" (dict "Release" .Release "name" "dns" "nameOverride" .Values.dns.dns.nameOverride) }}-gitlab-registry
      containers:
      {{- include "dotContainer" (dict "Values" .Values "Release" .Release "sidecar" false) | nindent 6 }}
      {{- with .Values.dns.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: dot-certs
        secret:
          {{- if .Values.dns.dot.tls.secretName }}
          secretName: {{ .Values.dns.dot.tls.secretName }}
          {{- else if (and .Values.testFlags .Values.testFlags.legacyNames) }}
          secretName: letsencrypt-prod-dot
          {{- else }}
          secretName: {{ include "name" (dict "Release" .Release "name" "dot" "nameOverride" .Values.dns.dot.nameOverride) }}-cert
          {{- end }}
    {{- with .Values.dns.dot.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.dns.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}